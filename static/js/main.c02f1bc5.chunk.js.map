{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["globalID","App","task","setTask","useState","todos","setTodos","React","createElement","onSubmit","event","preventDefault","oldTodos","todo","id","type","value","onChange","target","map","item","key","onClick","deleteItem","itemID","filter","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8MAIA,IAAIA,EAAW,EAwCAC,MAvCf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAOC,GAAYF,mBAAS,IAanC,OAAOG,IAAAC,cAAA,WACLD,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,QAAMC,SAbP,SAAoBC,GACnBA,EAAMC,iBACNL,EAASM,IACPT,EAAQ,IACD,IAAIS,EAAU,CAAEC,KAAMX,EAAMY,GAAId,UAUvCO,IAAAC,cAAA,SACCO,KAAK,OACLC,MAAOd,EACPe,SAAUP,IACTP,EAAQO,EAAMQ,OAAOF,UAEvBT,IAAAC,cAAA,UAAQO,KAAK,UAAS,eACtBR,IAAAC,cAAA,UACGH,EAAMc,IAAIC,GACFb,IAAAC,cAAA,OAAKa,IAAOD,EAAKN,IACtBP,IAAAC,cAAA,UAAKY,EAAKP,KAAK,IAACN,IAAAC,cAAA,UAAQc,QAASA,KAAMC,OAjB7BC,EAiBwCJ,EAAKN,QAhB/DR,EAASM,GAAYA,EAASa,OAAOL,GAAQA,EAAKN,KAAMU,IAD1D,IAAoBA,IAiBkD,iBCrBzDE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjC,IAAAC,cAACD,IAAMkC,WAAU,KACflC,IAAAC,cAACP,EAAG,QAORyB,K","file":"static/js/main.c02f1bc5.chunk.js","sourcesContent":["\nimport React,{useState, useEffect} from'react';\nimport './App.css';\n\nlet globalID = 0\nfunction App() {\n  const [task, setTask] = useState(\"\")\n  const [todos, setTodos] = useState([]);\n\n   function createTodo(event){\n    event.preventDefault();\n    setTodos(oldTodos =>{\n      setTask('')\n      return [...oldTodos, { todo: task, id: globalID++ }];\n    })\n   }\n  function deleteItem(itemID){\n    setTodos(oldTodos => oldTodos.filter(item => item.id!== itemID))\n  }\n\n  return <div>\n    <h1>Best To Do App Ever</h1>\n    <form onSubmit={createTodo}>\n      <input \n       type=\"text\" \n       value={task} \n       onChange={event => {\n        setTask(event.target.value)\n      }}/>\n      <button type=\"submit\">Create Todo</button>\n      <ul>\n        {todos.map(item => {\n          return <div key = {item.id}>\n            <li>{item.todo} <button onClick={() => deleteItem(item.id)}>Delete</button></li>\n            \n          </div>\n        })}\n      </ul>\n    </form>\n    \n  </div>\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}